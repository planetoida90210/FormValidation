{"version":3,"sources":["form-background-image.png","App.js","serviceWorker.js","index.js"],"names":["module","exports","App","state","username","email","pass","accept","message","errors","messages","username_incorrect","email_incorrect","password_incorrect","accept_incorrect","handleChange","e","name","target","type","value","setState","checked","handleSubmit","preventDefault","validation","formValidation","correct","console","log","password","length","indexOf","this","setTimeout","style","backgroundImage","className","icon","faGamepad","onSubmit","noValidate","htmlFor","id","placeholder","onChange","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e2de7016.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/form-background-image.9ea5cff9.png\";","import React, { Component } from 'react';\nimport './App.css'\nimport backgroundImage from './form-background-image.png'\nimport { faGamepad } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nclass App extends Component {\n  state = {\n    username: '',\n    email: '',\n    pass : '',\n    accept: false,\n    message: '',\n\n    errors: {\n    username: false,\n    email: false,\n    pass : false,\n    accept: false,\n    }\n    }\n\n    messages = {\n      username_incorrect: 'Your Username should be longer than 10 characters and not contains space.',\n      email_incorrect: 'Missing \"@\" in email.',\n      password_incorrect: 'Passsword should have 8 characters.',\n      accept_incorrect: 'Unconfirmed terms and conditions'\n    }\n\n    handleChange = (e) => {\n    \n      const name = e.target.name\n      const type = e.target.type\n\n\n      if(type === 'text' || type === 'password' || type === 'email') {\n        const value = e.target.value;\n        this.setState({\n          [name]: value,\n          \n        })\n      } else if (type === 'checkbox') {\n\n        const checked = e.target.checked;\n        this.setState({\n          [name]: checked, \n        })\n      }\n    }\n\n    handleSubmit = (e) => {\n      e.preventDefault()\n\n      const validation = this.formValidation()\n      if(validation.correct) {\n        this.setState({\n          username: '',\n          email: '',\n          pass : '',\n          accept: false,\n          message: 'Signup complete!',\n      \n          errors: {\n          username: false,\n          email: false,\n          pass : false,\n          accept: false,\n          }  \n        }) \n        console.log('formularz wysÅ‚any')\n      } else {\n        this.setState({\n          errors: {\n            username: !validation.username,\n            email: !validation.email,\n            pass : !validation.password,\n            accept: !validation.accept,\n            }\n        })\n      }\n    }\n\n    formValidation = () => {\n      let username = false;\n      let email = false;\n      let password = false;\n      let accept = false;\n      let correct = false;\n\n      if(this.state.username.length > 10 && this.state.username.indexOf(' ') === -1) {\n        username = true;\n      }\n\n      if(this.state.email.indexOf('@') !== -1) {\n        email = true;\n      }\n\n      if(this.state.pass.length === 8) {\n        password = true;\n      }\n\n      if(this.state.accept) {\n        accept = true;\n      }\n\n      if(username && email && password && accept) {\n        correct = true;\n      }\n\n      return ({\n        username,\n        email,\n        password,\n        accept,\n        correct\n      })\n    }\n\n    componentDidUpdate() {\n      if(this.state.message !== \"\"){\n        setTimeout(()=> this.setState({\n          message: '',\n        }) , 3000)\n      }\n    }\n\n  render() { \n    return ( \n      <div style={{backgroundImage:`url(${backgroundImage})`}} className=\"signupSection\">\n        <div className=\"info\">\n          <h2>Classic Game Moves</h2>\n          <FontAwesomeIcon className='fa' icon={faGamepad} />\n          \n          {this.state.message ? <p className='formSend'>{this.state.message}</p> : <p className='formSend'>Are you ready for journey?</p>  }\n        </div>\n        <form className='signupForm' onSubmit={this.handleSubmit} noValidate>\n          <h2>Sign up</h2>\n          <label htmlFor=\"user\">\n      <input \n      type=\"text\" \n      id=\"user\" \n      name=\"username\" \n      placeholder=\"Username\"\n      value={this.state.username}\n      onChange={this.handleChange}\n      />\n   {this.state.errors.username && <span>{this.messages.username_incorrect}</span>}\n          </label>\n\n          <label htmlFor=\"email\">\n      <input \n      type=\"email\" \n      id=\"email\" \n      name=\"email\" \n      placeholder=\"Email\"\n      value={this.state.email}\n      onChange={this.handleChange}\n      />\n      {this.state.errors.email && <span>{this.messages.email_incorrect}</span>}\n          </label>\n\n          <label htmlFor=\"password\">\n      <input \n      type=\"password\" \n      id=\"password\" \n      name=\"pass\" \n      placeholder=\"Password\"\n      value={this.state.pass}\n      onChange={this.handleChange}\n      />\n      {this.state.errors.pass && <span>{this.messages.password_incorrect}</span>}\n          </label>\n          <label htmlFor=\"accept\">\n      \n            <input \n            className='terms'\n            id=\"accept\"\n            name=\"accept\"\n            type=\"checkbox\"\n            checked={this.state.accept}\n            onChange={this.handleChange}\n            />\n            <span className=\"terms\">I accept terms and conditions</span>\n          </label>\n          {this.state.errors.accept && <span>{this.messages.accept_incorrect}</span>}\n          <button>sign up</button>\n        </form>\n      </div>\n     );\n  }\n}\n \nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}